name: Staging CI Pipeline

on:
  push:
    branches:
      - stg
  schedule:
    - cron: '0 19 * * 1-5'

env:
  AWS_ROLE_TO_ASSUME: arn:aws:iam::144817152095:role/GitHub-actions-iam
  AWS_REGION: us-east-1
  CLOUDFRONT_DISTRIBUTION_ID: ED8TJZ4X8RCYS
  S3_BUCKET_NAME: prod-dcw-bucket-cdn

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

  build:
    needs: [unit-test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Merge Dev into Staging
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch origin dev
          git merge --no-ff --no-edit origin/dev || {
            echo "Merge conflict detected. Please resolve conflicts manually."
            exit 1
          }

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ hashFiles('package.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run build
        run: yarn build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build/**/*

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2

      - name: Create build directory
        run: mkdir -p build

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: build/

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHubActionsSession
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Amazon S3
        run: |
          aws s3 sync --delete build/ s3://${{ env.S3_BUCKET_NAME }} || {
            echo "S3 deployment failed"
            exit 1
          }

      - name: Start CloudFront Invalidation
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths '/*' || {
            echo "CloudFront invalidation failed"
            exit 1
          }
